// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using topop.Infrastructure;

#nullable disable

namespace topop.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250201131428_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("topop.Domain.Models.Ranking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rankings", "dbo");
                });

            modelBuilder.Entity("topop.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "dbo");
                });

            modelBuilder.Entity("topop.Domain.Models.UserRanking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RankingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RankingId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRankings", "dbo");
                });

            modelBuilder.Entity("topop.Domain.Models.UserVideoRanking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VideoRankingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VideoRankingId");

                    b.ToTable("UserVideoRankings", "dbo");
                });

            modelBuilder.Entity("topop.Domain.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Videos", "dbo");
                });

            modelBuilder.Entity("topop.Domain.Models.VideoRanking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RankingId")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RankingId");

                    b.HasIndex("VideoId");

                    b.ToTable("VideoRankings", "dbo");
                });

            modelBuilder.Entity("topop.Domain.Models.UserRanking", b =>
                {
                    b.HasOne("topop.Domain.Models.Ranking", "Ranking")
                        .WithMany("UserRankings")
                        .HasForeignKey("RankingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("topop.Domain.Models.User", "User")
                        .WithMany("UserRankings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ranking");

                    b.Navigation("User");
                });

            modelBuilder.Entity("topop.Domain.Models.UserVideoRanking", b =>
                {
                    b.HasOne("topop.Domain.Models.User", "User")
                        .WithMany("UserVideoRanking")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("topop.Domain.Models.VideoRanking", "VideoRanking")
                        .WithMany("UserVideoRanking")
                        .HasForeignKey("VideoRankingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("VideoRanking");
                });

            modelBuilder.Entity("topop.Domain.Models.VideoRanking", b =>
                {
                    b.HasOne("topop.Domain.Models.Ranking", "Ranking")
                        .WithMany("VideoRankings")
                        .HasForeignKey("RankingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("topop.Domain.Models.Video", "Video")
                        .WithMany("VideoRankings")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ranking");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("topop.Domain.Models.Ranking", b =>
                {
                    b.Navigation("UserRankings");

                    b.Navigation("VideoRankings");
                });

            modelBuilder.Entity("topop.Domain.Models.User", b =>
                {
                    b.Navigation("UserRankings");

                    b.Navigation("UserVideoRanking");
                });

            modelBuilder.Entity("topop.Domain.Models.Video", b =>
                {
                    b.Navigation("VideoRankings");
                });

            modelBuilder.Entity("topop.Domain.Models.VideoRanking", b =>
                {
                    b.Navigation("UserVideoRanking");
                });
#pragma warning restore 612, 618
        }
    }
}
